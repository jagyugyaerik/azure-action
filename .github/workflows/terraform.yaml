name:  Provision Application Landing Zone
on:
  workflow_dispatch:

jobs:
  # load_changed_files:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     matrix: ${{ steps.load_scenarios.outputs.matrix }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - id: load_changed_files
  #       run: |
  #         changed_files_in_estate_folder=$(git diff --name-only HEAD HEAD~1 | grep estate)

  #         cases=$((
  #           cat ./.github/workflows/standalone-scenarios.json) | jq -c .)
  #         echo "::set-output name=matrix::${cases}"
  terraform-plan:
    runs-on: ubuntu-latest
    env:
      TF_CLI_ARGS: '-no-color'
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      TFVARS_FILE_PATH: ./project_spaces
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v2
      - run: |
          subscription_id=$(awk '/subscription_id/{print $NF}' project_spaces/example_app.tfvars | tr -d '[:space:]' | tr -d '"')
          if [[ ${subscription_id//-/} =~ ^[[:xdigit:]]{32}$ ]]; then
            echo "ARM_SUBSCRIPTION_ID=$subscription_id" >> $GITHUB_ENV
            echo ${{ secrets.AZURE_CREDENTIALS }} | jq -r '.subscriptionId="${ARM_SUBSCRIPTION_ID}"' > AZURE_CREDENTIALS.json
            echo "AZURE_CREDENTIALS=$(cat AZURE_CREDENTIALS.json)" >> $GITHUB_ENV
            echo ${{ env.AZURE_CREDENTIALS }}
          else
            echo "ARM_SUBSCRIPTION_ID=${{ secrets.ARM_SUBSCRIPTION_ID }}" >> $GITHUB_ENV
          fi
      - name: Login Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ env.AZURE_CREDENTIALS }}
      - run: |
         az account show
  #     - name: Install Terraform
  #       uses: hashicorp/setup-terraform@v1
  #     - name: Terraform fmt
  #       id: fmt
  #       run: terraform fmt -check
  #     - name: Terraform Init
  #       id: init
  #       run: |
  #         terraform init
  #     - name: Terraform Validate
  #       id: validate
  #       run: terraform validate
  #     - name: Terraform Apply
  #       id: apply
  #       run: terraform plan -var-file="${{ env.TFVARS_FILE_PATH }}/${{ github.event.inputs.environment_name }}.tfvars"
  # terraform-apply:
  #   runs-on: ubuntu-latest
  #   env:
  #     TF_CLI_ARGS: '-no-color'
  #     ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  #     ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  #     ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  #     ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  #     TFVARS_FILE_PATH: ./project_spaces
  #   steps:
  #     - name: Checkout Source Code
  #       uses: actions/checkout@v2
  #     - name: Install Terraform
  #       uses: hashicorp/setup-terraform@v1
  #     - name: Terraform fmt
  #       id: fmt
  #       run: terraform fmt -check
  #     - name: Terraform Init
  #       id: init
  #       run: |
  #         terraform init
  #     - name: Terraform Validate
  #       id: validate
  #       run: terraform validate
  #     - name: Terraform Apply
  #       id: apply
  #       run: terraform apply -auto-approve -var-file="${{ env.TFVARS_FILE_PATH }}/${{ github.event.inputs.environment_name }}.tfvars"